{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAmBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA1BAQ,SAASC,cAAc,SAC/BC,iBAAiB,UAAUC,IAC9BA,EAAMC,iBAEN,MAAMC,OAAEA,EAAQb,MAAAc,EAAKC,KAAEA,GAASJ,EAAMK,OAAOC,SAE7C,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAOM,MAAOD,GAAK,EACrCpB,EAAcoB,EAAI,EAAGE,OAAON,EAAMK,OAASD,EAAIE,OAAOL,EAAKI,QACxDE,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAU,IAEhEwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA0B,OAAOG,QAAQ,sBAAoB1B,QAAeC,MAAU,GAC5D","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const { amount, delay, step } = event.target.elements;\n\n  for (let i = 0; i < amount.value; i += 1) {\n    createPromise(i + 1, Number(delay.value) + i * Number(step.value))\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","amount","delay1","step","target","elements","i","value","Number","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.bac9a077.js.map"}